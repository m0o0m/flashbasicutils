1.计算某一point是否在bitmapdata边界
	计算point上一point和下一point的位置是否在边界两端
	适合二维横版
	
	计算移动的下一个位置是否与bitmapdata内部
	如果是,停止某一方向运动,并寻找替代位置运动
	
2.某一物体与其他所有物体进行碰撞检测
	将所有物体进行矩形抽象,检测两矩形是否intersects
	
	检测两物体是否hitTestObject,内部抽象为两个矩形区域检测
	
	将一个物体抽象为point,判断另一物体在指定点处是否包含像素hitTestPoint:可指定是否是像素级别检测
	
	物体间像素级别的碰撞:HitTest
	
	将此物体四周加上point,转化为一组point与其他物体进行hitTestPoint 检测;
	
	计算下一个移动位置,根据移动的方向,计算是否大于物体或小于边界值;需要满足当前位置为空,下一位置不为空两个条件
	
	
	
	
============================
1.边界最邻近两点判断
2.根据物体形状和逻辑需求选择不同的碰撞方式